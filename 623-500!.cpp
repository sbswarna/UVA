#include<bits/stdc++.h>
using namespace std;
long long i,n,p,m,j;
string s[1009],t,u,v,s1,w,x;
int main()
{
    s[0]="1";
    s[1]="1";
    s[2]="2";
    s[3]="6";
    s[4]="24";
    s[5]="120";
    s[6]="720";
    s[7]="5040";
    s[8]="40320";
    s[9]="362880";
    s[10]="3628800";
    s[11]="39916800";
    s[12]="479001600";
    s[1000]="402387260077093773543702433923003985719374864210714632543799910429938512398629020592044208486969404800479988610197196058631666872994808558901323829669944590997424504087073759918823627727188732519779505950995276120874975462497043601418278094646496291056393887437886487337119181045825783647849977012476632889835955735432513185323958463075557409114262417474349347553428646576611667797396668820291207379143853719588249808126867838374559731746136085379534524221586593201928090878297308431392844403281231558611036976801357304216168747609675871348312025478589320767169132448426236131412508780208000261683151027341827977704784635868170164365024153691398281264810213092761244896359928705114964975419909342221566832572080821333186116811553615836546984046708975602900950537616475847728421889679646244945160765353408198901385442487984959953319101723355556602139450399736280750137837615307127761926849034352625200015888535147331611702103968175921510907788019393178114194545257223865541461062892187960223838971476088506276862967146674697562911234082439208160153780889893964518263243671616762179168909779911903754031274622289988005195444414282012187361745992642956581746628302955570299024324153181617210465832036786906117260158783520751516284225540265170483304226143974286933061690897968482590125458327168226458066526769958652682272807075781391858178889652208164348344825993266043367660176999612831860788386150279465955131156552036093988180612138558600301435694527224206344631797460594682573103790084024432438465657245014402821885252470935190620929023136493273497565513958720559654228749774011413346962715422845862377387538230483865688976461927383814900140767310446640259899490222221765904339901886018566526485061799702356193897017860040811889729918311021171229845901641921068884387121855646124960798722908519296819372388642614839657382291123125024186649353143970137428531926649875337218940694281434118520158014123344828015051399694290153483077644569099073152433278288269864602789864321139083506217095002597389863554277196742822248757586765752344220207573630569498825087968928162753848863396909959826280956121450994871701244516461260379029309120889086942028510640182154399457156805941872748998094254742173582401063677404595741785160829230135358081840096996372524230560855903700624271243416909004153690105933983835777939410970027753472000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    for(i=13; i<=999; i++)
    {
        if(i<=99)
        {
            stringstream ss;
            ss << i;
            t=ss.str();
            //cout<<t<<endl;
            p=0;
            for(j=s[i-1].size()-1; j>=0; j--)
            {
                m=(s[i-1][j]-48)*(t[1]-48);
                m=m+p;
                if(m>9)
                {
                    u.push_back((m%10)+48);
                    p=m/10;
                }
                else
                {
                    u.push_back(m+48);
                    p=0;
                }
                if(j==0)
                {
                    if(m>9)
                    {
                        u.push_back((m/10)+48);
                    }
                }
            }
            v.push_back(0+48);
            p=0;
            for(j=s[i-1].size()-1; j>=0; j--)
            {
                m=(s[i-1][j]-48)*(t[0]-48);
                m=m+p;
                if(m>9)
                {
                    v.push_back((m%10)+48);
                    p=m/10;
                }
                else
                {
                    v.push_back(m+48);
                    p=0;
                }
                if(j==0)
                {
                    if(m>9)
                    {
                        v.push_back((m/10)+48);
                    }
                }
            }
            if(u.size()>v.size())
            {
                for(j=v.size(); j<u.size(); j++)
                {
                    v.push_back(0+48);
                }
            }
            else if(v.size()>u.size())
            {
                for(j=u.size(); j<v.size(); j++)
                {
                    u.push_back(0+48);
                }
            }
            p=0;
            for(j=0; j<u.size(); j++)
            {
                m=(u[j]-48)+(v[j]-48)+p;
                if(m>9)
                {
                    s1.push_back((m%10)+48);
                    p=m/10;
                }
                else
                {
                    s1.push_back(m+48);
                    p=0;
                }
                if(j==u.size()-1)
                {
                    if(m>9)
                        s1.push_back(p+48);
                }
            }
            u.clear();
            v.clear();
            t.clear();
        }
        else if(i>=100&&i<=999)
        {
            stringstream ss;
            ss << i;
            t=ss.str();
            //cout<<t<<endl;
            p=0;
            for(j=s[i-1].size()-1; j>=0; j--)
            {
                m=(s[i-1][j]-48)*(t[2]-48);
                m=m+p;
                if(m>9)
                {
                    u.push_back((m%10)+48);
                    p=m/10;
                }
                else
                {
                    u.push_back(m+48);
                    p=0;
                }
                if(j==0)
                {
                    if(m>9)
                    {
                        u.push_back((m/10)+48);
                    }
                }
            }
            v.push_back(0+48);
            p=0;
            for(j=s[i-1].size()-1; j>=0; j--)
            {
                m=(s[i-1][j]-48)*(t[1]-48);
                m=m+p;
                if(m>9)
                {
                    v.push_back((m%10)+48);
                    p=m/10;
                }
                else
                {
                    v.push_back(m+48);
                    p=0;
                }
                if(j==0)
                {
                    if(m>9)
                    {
                        v.push_back((m/10)+48);
                    }
                }
            }
            w=w+"00";
            p=0;
            for(j=s[i-1].size()-1; j>=0; j--)
            {
                m=(s[i-1][j]-48)*(t[0]-48);
                m=m+p;
                if(m>9)
                {
                    w.push_back((m%10)+48);
                    p=m/10;
                }
                else
                {
                    w.push_back(m+48);
                    p=0;
                }
                if(j==0)
                {
                    if(m>9)
                    {
                        w.push_back((m/10)+48);
                    }
                }
            }
            long long mx=max(u.size(),v.size());
            long long q=w.size();
            mx=max(mx,q);
            if(u.size()!=mx)
            {
                for(j=u.size(); j<mx; j++)
                {
                    u.push_back(0+48);
                }
            }
            if(v.size()!=mx)
            {
                for(j=v.size(); j<mx; j++)
                {
                    v.push_back(0+48);
                }
            }
            if(w.size()!=mx)
            {
                for(j=w.size(); j<mx; j++)
                {
                    w.push_back(0+48);
                }
            }
            p=0;
            for(j=0; j<u.size(); j++)
            {
                m=(u[j]-48)+(v[j]-48)+(w[j]-48)+p;
                if(m>9)
                {
                    s1.push_back((m%10)+48);
                    p=m/10;
                }
                else
                {
                    s1.push_back(m+48);
                    p=0;
                }
                if(j==u.size()-1)
                {
                    if(m>9)
                        s1.push_back(p+48);
                }
            }
            u.clear();
            v.clear();
            t.clear();
            w.clear();
        }
        for(j=s1.size()-1; j>=0; j--)
        {
            s[i].push_back(s1[j]);
        }
        s1.clear();
    }
    while(scanf("%lld",&n)==1)
    {
        //cout<<s[n].size()<<endl;
        cout<<n<<"!"<<endl;
        cout<<s[n]<<endl;
    }
    return 0;
}
